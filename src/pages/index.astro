---
import Layout from "../layouts/Layout.astro";

const UNSPLASH_ACCESS_KEY = import.meta.env.PUBLIC_UNSPLASH_ACCESS_KEY;
const response = await fetch(
  `https://api.unsplash.com/photos/random?client_id=${UNSPLASH_ACCESS_KEY}&orientation=landscape`
);
const data = await response.json();

const {
  urls: { regular: imageUrl },
  user: {
    username,
    name,
    profile_image: { large: userImage },
    bio,
    links: { html: userLink }
  },
  alt_description: imageDescription
} = data;
---

<Layout title="Image from Unsplash" description={imageDescription}>
  <main>
    <h1>Unsplash Image built with <span class="text-gradient">Astro</span></h1>
    <p class="description">
      {imageDescription}
    </p>

    <img src={imageUrl} alt={imageDescription} width="1080" />

    <div class="user-description">
      <img src={userImage} alt={username} width="128" />
      <p class="description">
        By <strong>{name}</strong> (<a href={userLink} class="text-gradient">{username}</a>) <br />
        {bio || 'This user doesn\'t have a bio' }
      </p>
    </div>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 1920px;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }

  .user-description {
    display: flex;
    margin-top: 4rem;
    gap: 4rem;
  }

  .description {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .description strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
